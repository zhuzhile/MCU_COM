C51 COMPILER V9.60.0.0   LCD1602                                                           06/01/2022 23:44:15 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN LCD1602.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <reg52.h>
   2          #include "Delay.h"
   3          
   4          #define uchar unsigned char
   5          
   6          sbit LCD_rs=P2^6;
   7          sbit LCD_rw=P2^5;
   8          sbit LCD_en=P2^7;
   9          
  10          void write_command(uchar command){
  11   1        LCD_rs=0;
  12   1        P0=command;
  13   1        delay(5);
  14   1        LCD_en=1;
  15   1        delay(5);
  16   1        LCD_en=0;
  17   1      }
  18          
  19          void write_data(uchar TR_data){
  20   1        LCD_rs=1;
  21   1        P0=TR_data;
  22   1        delay(5);
  23   1        LCD_en=1;
  24   1        delay(5);
  25   1        LCD_en=0;
  26   1      }
  27          
  28          void LCD_init(){
  29   1        LCD_rw=0;
  30   1        LCD_en=0;
  31   1        write_command(0x38);    
  32   1        write_command(0x0c);
  33   1        write_command(0x06);
  34   1        write_command(0x01);    //ÏÔÊ¾Çå0£¬Ö¸ÕëÇå0
  35   1      }
  36          
  37          
  38          /** * @brief LCD1602ÉèÖÃ¹â±êÎ»ÖÃ * @param Line ÐÐÎ»ÖÃ£¬·¶Î§£º1~2 * @param Column ÁÐÎ»ÖÃ£¬·¶Î§£º1~16 * @ret
             -val ÎÞ */
  39          void set_cursor(unsigned char Line, unsigned char Column)
  40          {
  41   1          
  42   1        if(Line==1)
  43   1        {
  44   2          
  45   2          write_command(0x80 | (Column-1));
  46   2        }
  47   1        else if(Line==2)
  48   1        {
  49   2          
  50   2          write_command(0x80 | (Column-1+0x40));
  51   2        }
  52   1      }
  53          
  54          
C51 COMPILER V9.60.0.0   LCD1602                                                           06/01/2022 23:44:15 PAGE 2   

  55          
  56          /** * @brief ÔÚLCD1602Ö¸¶¨Î»ÖÃÉÏÏÔÊ¾Ò»¸ö×Ö·û * @param Line ÐÐÎ»ÖÃ£¬·¶Î§£º1~2 * @param Column ÁÐÎ»ÖÃ£¬·¶Î§£
             -º1~16 * @param Char ÒªÏÔÊ¾µÄ×Ö·û * @retval ÎÞ */
  57          void show_char(unsigned char Line, unsigned char Column, char Char)
  58          {
  59   1          
  60   1        set_cursor(Line, Column);
  61   1        write_data(Char);
  62   1      }
  63          
  64          
  65          /** * @brief ÔÚLCD1602Ö¸¶¨Î»ÖÃ¿ªÊ¼ÏÔÊ¾Ëù¸ø×Ö·û´® * @param Line ÆðÊ¼ÐÐÎ»ÖÃ£¬·¶Î§£º1~2 * @param Column ÆðÊ¼Á
             -ÐÎ»ÖÃ£¬·¶Î§£º1~16 * @param String ÒªÏÔÊ¾µÄ×Ö·û´® * @retval ÎÞ */
  66          void show_string(unsigned char Line, unsigned char Column, char *String)
  67          {
  68   1          
  69   1        unsigned char i;
  70   1        set_cursor(Line, Column);
  71   1        for(i = 0; String[i] != '\0'; i++)
  72   1        {
  73   2          
  74   2          write_data(String[i]);
  75   2        }
  76   1      }
  77          
  78          /** * @brief ·µ»ØÖµ=XµÄY´Î·½ */
  79          int get_pow(int X, int Y)
  80          {
  81   1          
  82   1        unsigned char i;
  83   1        int Result = 1;
  84   1        for(i = 0; i < Y; i++)
  85   1        {
  86   2          
  87   2          Result *= X;
  88   2        }
  89   1        return Result;
  90   1      }
  91          
  92          /** * @brief ÔÚLCD1602Ö¸¶¨Î»ÖÃ¿ªÊ¼ÏÔÊ¾Ëù¸øÊý×Ö * @param Line ÆðÊ¼ÐÐÎ»ÖÃ£¬·¶Î§£º1~2 * @param Column ÆðÊ¼ÁÐÎ
             -»ÖÃ£¬·¶Î§£º1~16 * @param Number ÒªÏÔÊ¾µÄÊý×Ö£¬·¶Î§£º0~65535 * @param Length ÒªÏÔÊ¾Êý×ÖµÄ³¤¶È£¬·¶Î§£º1~5 * @retval ÎÞ */
  93          void show_num(unsigned char Line, unsigned char Column, unsigned char Number, unsigned char Length)
  94          {
  95   1          
  96   1        unsigned char i;
  97   1        set_cursor(Line, Column);
  98   1        for(i = Length; i > 0; i--)
  99   1        {
 100   2          
 101   2          write_data(Number/get_pow(10,i-1)%10+'0');
 102   2        }
 103   1      }
 104          
 105          
 106          
 107          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    255    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   LCD1602                                                           06/01/2022 23:44:15 PAGE 3   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.60.0.0   SLAVE2                                                            06/06/2022 03:53:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SLAVE2
OBJECT MODULE PLACED IN Slave2.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Slave2.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Sl
                    -ave2.lst) TABS(2)

line level    source

   1          #include <reg52.h>
   2          #include "LCD1602.h"
   3          #include "Delay.h"
   4          
   5          #define uchar unsigned char 
   6          #define uint unsigned int
   7          #define OSC 11059260
   8          #define BAUDRATE 9600
   9          
  10          uchar R_buf[10],T_buf[10];    //接收数据缓存
  11          uint RPtr, TPtr; // 接收与发送指针
  12          uchar check, len, R_check; // 校验位和数据长度
  13          uchar slave_addr = 0x02; // 本机地址 
  14          uchar R_addr = 0x00;    // 接收到地址
  15          uint time_count = 0; //计时
  16          bit Succ = 1; //判断从机是否接收成功
  17          bit R_done = 0; // 接收完成
  18          bit T_done = 0 ;// 发送完成
  19          bit A_acc = 0; // 判断地址有效
  20          sbit LED = P2^3;
  21          sbit RS485_TR = P3^2;
  22          
  23          #define TXEN RS485_TR=1 //发送使能
  24          #define RXEN RS485_TR=0 //接收使能
  25          
  26          
  27          void serial_init(){
  28   1        TMOD = 0X20; // 定时器1选择模式2，8位自动重载
  29   1        TL1 = 256 - (OSC / BAUDRATE / 12 / 16); // 硬件自动重载
  30   1        TH1 = 256 - (OSC / BAUDRATE / 12 / 16);
  31   1        TR1 = 1;     // 开启计数
  32   1        SCON = 0xF0; // 串口工作方式3
  33   1        PCON |= 0x80;
  34   1        EA = 1;
  35   1        ES = 1;
  36   1        RXEN;
  37   1      }
  38          
  39          
  40          
  41          void timer0_init(){
  42   1        TMOD &= 0xF0;
  43   1        TMOD |= 0x01;
  44   1        TF0 = 0;
  45   1        TR0 = 1; 
  46   1        TH0 = (65535 - 1000)/256;
  47   1        TL0 = (65535 - 1000)%256;
  48   1        ET0 = 1;
  49   1        PT0 = 1;
  50   1        EA = 1;
  51   1      }
  52          
  53          void show_test_data(uchar index,uchar TR_data){
  54   1        
C51 COMPILER V9.60.0.0   SLAVE2                                                            06/06/2022 03:53:49 PAGE 2   

  55   1        switch(index){
  56   2          case 0:
  57   2            show_string(2,1, "_T_");
  58   2            delay(1000);
  59   2            show_num(2, 1, TR_data, 3);
  60   2            break;
  61   2          case 1:
  62   2            show_string(2,1, "_R_");
  63   2            delay(1000);
  64   2            show_num(2, 1, TR_data, 3);
  65   2            break;
  66   2          case 2:
  67   2            show_string(2,1, "TD_");
  68   2            delay(1000);
  69   2            show_num(2, 1, TR_data, 3);
  70   2            break;
  71   2          case 3:
  72   2            show_string(2,1, "RD_");
  73   2            delay(1000);
  74   2            show_num(2, 1, TR_data, 3);
  75   2            break;
  76   2          case 4:
  77   2            show_string(2,1, "RA_");
  78   2            delay(1000);
  79   2            show_num(2, 1, TR_data, 3);
  80   2            break;
  81   2          case 5:
  82   2            show_string(2,1, "TA_");
  83   2            delay(1000);
  84   2            show_num(2, 1, TR_data, 3);
  85   2            break;
  86   2        }
  87   1      }
  88          
  89          
  90          void show_data(TR_data){  // 显示数据
  91   1        show_num(1, 3, TR_data, 3);
  92   1      }
  93          
  94          void mock_data(){
  95   1        uint i = 0,len_data = R_buf[2] + 3;
  96   1        
  97   1        for( i = 0; i < len_data;i ++){
  98   2          if(!Succ && i == 1){
  99   3            T_buf[i] = 0;
 100   3            break;
 101   3          }
 102   2          T_buf[i] = R_buf[i + 1];
 103   2        }
 104   1        
 105   1        check = T_buf[0];
 106   1        len_data = T_buf[1] == 0 ? 2: T_buf[1] + 3;
 107   1        
 108   1        for( i = 1 ; i < len_data; i++){
 109   2          check ^= T_buf[i];
 110   2        }
 111   1        
 112   1        T_buf[i] = check;
 113   1      }
 114          
 115          
 116          
C51 COMPILER V9.60.0.0   SLAVE2                                                            06/06/2022 03:53:49 PAGE 3   

 117          void send_addr(uchar slave_addr){
 118   1         TI = 0;
 119   1         TB8 = 1;
 120   1         TXEN;
 121   1         SBUF = slave_addr;
 122   1         while(!TI);
 123   1         TI=0;
 124   1      }
 125          
 126          
 127          
 128          void send_data(){
 129   1        TI = 0;
 130   1        T_done = 0;
 131   1        TXEN;
 132   1        TPtr = 0;
 133   1        TB8 = 0;
 134   1        TI = 1;
 135   1        while(!T_done)
 136   1        T_done = 0; 
 137   1      }
 138          
 139          
 140          
 141          void recv_data(){
 142   1          uint i;
 143   1        
 144   1          RPtr = 0; // 初始化接收
 145   1          R_done = 0;
 146   1          RXEN;
 147   1      
 148   1          while(!R_done); //接收完成后比对校验位
 149   1          R_done = 0;
 150   1           
 151   1          R_check = R_buf[0];
 152   1          for(i = 1; i < len + 3;i++){
 153   2            R_check ^= R_buf[i];
 154   2          }
 155   1          Succ = ~Succ; //用于测试
 156   1         // Succ = (R_check == R_buf[len + 3] ? 1 : 0);
 157   1          
 158   1        //  timer0_init(); // 测试执行mock_data,多长时间；测试表明将近100ms
 159   1          mock_data();  // 根据接收数据，模拟数据
 160   1          
 161   1        //  show_test_data(25); //测试代码
 162   1        //  delay(1000);        
 163   1        //  show_test_data(time_count);
 164   1        //  delay(1000);
 165   1          
 166   1          delay(1000); //同步主机
 167   1          send_data();  //校验后向主机发送数据
 168   1      }
 169          
 170          
 171          
 172          void main(){
 173   1        LED = 0;
 174   1        serial_init();  // 串口初始化
 175   1        LCD_init();     // LCD显示初始化
 176   1        
 177   1        write_command(0x80); // 光标位置
 178   1        write_data('R');
C51 COMPILER V9.60.0.0   SLAVE2                                                            06/06/2022 03:53:49 PAGE 4   

 179   1        write_data(':');
 180   1        while(1){
 181   2          RI = 0;
 182   2          while(!RI); // 等到触发接收中断时跳出
 183   2          
 184   2          show_test_data(4, A_acc); //异常测试代码
 185   2          delay(1000);
 186   2          
 187   2          if(R_addr == slave_addr && A_acc){ // 确定地址,A_acc 用于模仿超过七毫秒没有接收到数据   
 188   3            show_test_data(5, A_acc);
 189   3            send_addr(slave_addr);
 190   3            SM2 = 0;
 191   3          }else {
 192   3            A_acc = ~A_acc;
 193   3            continue;
 194   3          }       
 195   2      
 196   2          recv_data(); // 接收数据，然后发送数据
 197   2          
 198   2          
 199   2          while(!Succ){ // 如果接收失败重新接收
 200   3            recv_data();
 201   3          }
 202   2          
 203   2          show_data(R_buf[3]); // 数据接收成功，则显示数据
 204   2          
 205   2          RPtr = 0;  //接受主机发送终止请求
 206   2          R_done = 0;
 207   2          RXEN;
 208   2          
 209   2          while(!R_done); //通信结束
 210   2          SM2 = 1;
 211   2          Succ = 0;
 212   2        }
 213   1      }
 214          
 215          
 216          void comISR() interrupt 4 { //串口通信中断服务
 217   1        if(RI == 1){  
 218   2          RI = 0;
 219   2          if(RB8 == 0){
 220   3            
 221   3            R_buf[RPtr++] = SBUF;
 222   3                                 
 223   3            show_test_data(1, R_buf[RPtr - 1]); //测试代码
 224   3            delay(1000);
 225   3            
 226   3            if( RPtr >= 4 + R_buf[2]){ //主机地址+从机地址+数据长度+数据+校验和
 227   4              
 228   4              show_test_data(3, RPtr);  //测试代码
 229   4              delay(1000);
 230   4              
 231   4              R_done = 1;
 232   4              len = R_buf[2];
 233   4            }
 234   3          }
 235   2          
 236   2          if(RB8 == 1){
 237   3              R_addr = SBUF;
 238   3          }
 239   2        } 
 240   1        
C51 COMPILER V9.60.0.0   SLAVE2                                                            06/06/2022 03:53:49 PAGE 5   

 241   1        
 242   1        if( TI == 1 && TB8 == 0){
 243   2          TI = 0;
 244   2          
 245   2          if(!T_done){
 246   3            TB8 = 0;
 247   3            SBUF = T_buf[TPtr++];
 248   3            
 249   3            show_test_data(0, T_buf[TPtr - 1]); //测试代码
 250   3            delay(1000);
 251   3            
 252   3            if(TPtr >= T_buf[1] + 3){
 253   4              
 254   4                show_test_data(2, TPtr); //测试代码
 255   4                delay(1000);
 256   4              
 257   4                T_done = 1;
 258   4                TPtr = 0;
 259   4            }
 260   3          } 
 261   2        }
 262   1      }
 263          
 264          
 265          
 266          void timer0ISR() interrupt 1{ // 定时器0中断服务timer 
 267   1        time_count ++;
 268   1        timer0_init();
 269   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    714    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     31       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
